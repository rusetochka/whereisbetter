{"version":3,"sources":["components/Landmark/Landmark.js","components/ImageGallery/ImageGallery.js","components/Country/Country.js","components/GeoNames/APIRequests.js","components/MainScreen/MainScreen.js","components/LoadingScreen/LoadingScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Landmark","props","prevSlide","bind","nextSlide","this","slide","photo","className","href","onClick","src","url","alt","renderCarousel","React","Component","slideIndex","ImageGallery","showSlides","plusSlides","photos","param","i","slides","document","getElementsByClassName","dots","length","style","display","replace","undefined","map","id","Country","handleHomeButton","backToHome","lang","language","langArr","Object","values","newArr","includes","push","newString","toString","population","unit","country","Math","round","area","km","square","arearaw","slice","temp","icon","weatherIcon","isDay","nIcon","flag","name","continent","capital","weather","APIRequests","getListOfCountries","fetch","headers","then","response","json","getLangName","getFlagFile","countryName","jsonResponse","query","pages","images","console","log","returnedObj","find","obj","title","getFlagUrl","returnedObj2","filename","keys","imageinfo","getWeatherInfo","city","temperature","main","description","timezone","sunrise","sys","sunset","lon","coord","lat","getPhotosFromFlickr","gallery","method","element","fPhotoId","fPhotoSecret","secret","fPhotoServer","server","fPhotoComment","comment","MainScreen","handleSearch","searchGeo","LoadingScreen","rejectedCityIndexes","ListOfCountries","App","state","landmarks","langName","flagImage","weatherInfo","localTime","formatTime","localDate","newStr","getElementById","innerHTML","randomNum","floor","random","geonames","countryCode","languages","code","areaInSqKm","continentName","setState","resultArr","result","codes","codeArr","split","langNames","langCode","toUpperCase","parse","wikitext","searchTerm","indexOfFirst","indexOf","indexOfLangName","lastIndexOf","endOfName","err","Date","now","countryTime","getTimezoneOffset","countryTimeShort","toTimeString","time","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e8e8bb42.chunk.js","sourcesContent":["import React from 'react';\nimport './Landmark.css';\n\n\n\n\nexport class Landmark extends React.Component {\n    constructor(props) {\n        super(props);\n        this.prevSlide = this.prevSlide.bind(this);\n        this.nextSlide = this.nextSlide.bind(this);\n    }\n\n    prevSlide() {\n        this.props.slide(-1);\n    }\n\n    nextSlide() {\n        this.props.slide(1);\n    }\n\n    renderCarousel() {\n        if(this.props.photo) {\n            return (<div>\n                <a key=\"prev\" className=\"prev\" href=\"/#\" onClick={this.prevSlide}>&#10094;</a>\n                <a key=\"next\" className=\"next\" href=\"/#\" onClick={this.nextSlide}>&#10095;</a>\n            </div>)\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <div className=\"mySlides fade\">\n                    <img className=\"landmarkPhoto\" src={this.props.photo.url} alt=\"null\"/>\n                    {this.renderCarousel()}\n                </div>\n                \n            </div>\n        )\n    }\n}\n\n\n\n","import React from 'react';\nimport './ImageGallery.css';\nimport { Landmark } from '../Landmark/Landmark';\n\nlet slideIndex = 1;\n\nexport class ImageGallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.showSlides = this.showSlides.bind(this);\n        this.plusSlides = this.plusSlides.bind(this);\n    }\n\n    componentDidMount(){\n        if(this.props.photos[0]) {\n            this.showSlides();\n        }\n        \n    }\n    componentDidUpdate(){\n        if(this.props.photos[0]) {\n            this.showSlides();\n        }\n    }\n\n    plusSlides(param) {\n        this.showSlides(slideIndex += param);\n    }\n\n    showSlides(param) {\n        let i;\n        const slides = document.getElementsByClassName(\"mySlides\");\n        const dots = document.getElementsByClassName(\"dot\");\n        if(param > slides.length) { slideIndex = 1};\n        if (param < 1) { slideIndex = slides.length};\n        for (i = 0; i < slides.length; i++) {\n            slides[i].style.display = \"none\";\n        };\n        for (i = 0; i < dots.length; i++) {\n            dots[i].className = dots[i].className.replace(\" active\", \"\");\n        };\n        slides[slideIndex-1].style.display = \"block\";\n        dots[slideIndex-1].className += \" active\";\n    }\n\n    render() {\n        \n        if(this.props.photos !== undefined) {\n        return (\n            <div className=\"Landmarks-gallery\">\n                \n                {this.props.photos.map(photo => {\n                    return <Landmark photo={photo} slide={this.plusSlides} key={photo.id} />\n                })}\n                \n                <div className=\"dotsContainer\">\n                    <span key=\"1\" className=\"dot\" ></span>\n                    <span key=\"2\" className=\"dot\" ></span>\n                    <span key=\"3\" className=\"dot\" ></span>\n                </div>\n            </div>\n        )} else {\n            return (\n                <h3>Top 3 Landmarks</h3>\n            )\n        }\n    }\n}","import React from 'react';\nimport './Country.css';\nimport { ImageGallery } from '../ImageGallery/ImageGallery';\n\n\n\n\nexport class Country extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleHomeButton = this.handleHomeButton.bind(this);\n        \n    }\n\n    handleHomeButton() {\n        this.props.backToHome();\n        \n    }\n    \n    render() {\n        //formating output of languages\n        const lang = this.props.language;\n        const langArr = Object.values(lang);\n        let newArr = [];\n        for (let i = 0; i < langArr.length; i++) {\n            if (!newArr.includes(' '+langArr[i])) {\n                newArr.push(' ' + langArr[i]);\n            }\n        };\n        const newString = newArr.toString();\n\n        //formating output of population\n        let population = 0;\n        let unit = '';\n        if (this.props.country.population > 999999) {\n            population += Math.round(this.props.country.population / 1000000);\n            unit += 'mln';\n        } else if (this.props.country.population < 999999 && this.props.country.population > 1000) {\n            population = Math.round(this.props.country.population / 1000);\n            unit += 'k';\n        } else {\n            population = this.props.country.population;\n        };\n\n        //formating output of area\n        let area = '';\n        let km = '';\n        if (this.props.country.square) {\n            if (this.props.country.square > 999999) {\n                area += Math.round(this.props.country.square / 1000000);\n                km += \"mln \\u33A2\";\n            } else if (this.props.country.square < 999999 && this.props.country.square > 1000) {\n                const arearaw = Math.round(this.props.country.square).toString();\n                switch (arearaw.length) {\n                    case 6:\n                        area += arearaw.slice(0, 3) + ' ' + arearaw.slice(3, 6);\n                        break;\n                    case 5:\n                        area += arearaw.slice(0, 2) + ' ' + arearaw.slice(2, 5);\n                        break;\n                    case 4:\n                        area += arearaw.slice(0, 1) + ' ' + arearaw.slice(1, 3);\n                        break;\n                    default:\n                        area += arearaw;\n                        break;\n                }\n\n                km += \" \\u33A2\";\n            } else {\n                area += Math.round(this.props.country.square);\n                km += \" \\u33A2\";\n            };\n        }\n\n\n        //formating output of local temperature\n        const temp = Math.round(this.props.temp);\n\n\n        //choosing day or night weather icon\n        let icon = '';\n        if (this.props.weatherIcon) {\n            if (this.props.isDay === true) {\n                icon = `http://openweathermap.org/img/wn/${this.props.weatherIcon}@2x.png`;\n            } else {\n                const dIcon = this.props.weatherIcon;\n                const nIcon = dIcon.slice(0, 2) + 'n';\n                icon = `http://openweathermap.org/img/wn/${nIcon}@2x.png`;\n            }\n\n        };\n\n\n        return (\n            <div className=\"Country\" id=\"country\">\n                <a href=\"/#\" className=\"Home-Button\" onClick={this.handleHomeButton}>Try again</a>\n                <div className=\"Country-Heading\">\n                    <div className=\"Flag\">\n                        {this.props.flag && <img src={this.props.flag} alt=\"country flag\" />}\n                    </div>\n                    <h2 key='country-name'>{this.props.country.name}</h2>\n\n                </div>\n                <div><p className=\"continent\">{this.props.country.continent}</p></div>\n\n\n                <div className=\"Top-Info\">\n                    {this.props.country.capital && <p className=\"Capital\">Now in <span className='Capital-Text'>{this.props.country.capital}:</span> <br /><span id='time'></span></p>}\n\n                    {this.props.temp && <p className=\"Weather\">{temp} &#186;C</p>}\n                    {icon !== '' && <img className=\"Weather-Icon\" src={icon} alt='weather icon' />}\n                    <p className=\"Weather-Description\" >{this.props.weather}</p>\n\n\n                </div>\n\n                {this.props.photos && <ImageGallery photos={this.props.photos} />}\n\n                <div className=\"Bottom-Info\">\n                    {this.props.country.population && <p className=\"Population statistic\">Population:<br /> <span className=\"stat-span\">{population}{unit}</span></p>}\n                    {this.props.country.square && <p className=\"Square statistic\">Total Area: <br /> <span className=\"stat-span\">{area}{km}</span></p>}\n                    {this.props.language && <p className=\"Language statistic\">Language(s): <br /> <span className=\"stat-span\">{newString}</span></p>}\n\n                </div>\n\n            </div>\n\n        )\n    }\n};\n\n","const weatherApiKey = 'f06d76a331ee877094b6644de5b0638c';\nconst flickrKey = '8330ac9784218276b98195a5e4c25189';\n\nexport const APIRequests = {\n\n    getListOfCountries() {\n        return fetch('geonames.json', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(response => {\n            return response.json()});\n    },\n\n    getLangName() {\n        return fetch('https://en.wikipedia.org/w/api.php?action=parse&page=List_of_ISO_639-1_codes&prop=wikitext&section=1&format=json&origin=*')\n        .then(response => {\n            return response.json()\n        });   \n    },\n\n    getFlagFile(countryName) {\n        return fetch('https://en.wikipedia.org/w/api.php?action=query&titles=Gallery_of_sovereign_state_flags&prop=images&imlimit=500&format=json&origin=*').then(response => {\n            return response.json();\n        }).then(jsonResponse => {\n            if (jsonResponse.query.pages.[\"361082\"].images) {\n                console.log('Searching the gallery of sovereign state flags...');\n              const propTosearch = jsonResponse.query.pages.[\"361082\"].images;\n              const returnedObj = propTosearch.find(obj => {\n                return obj.title.includes(countryName);\n              });\n              if (!returnedObj) {\n                  return fetch('https://en.wikipedia.org/w/api.php?action=query&titles=Gallery_of_flags_of_dependent_territories&prop=images&imlimit=500&format=json&origin=*')\n                  .then(response => {\n                      return response.json();\n                  }).then(jsonResponse => {\n                      if(jsonResponse.query.pages.[\"2485800\"].images) {\n                          console.log('Searching list of dependent territories...');\n                          const propToSearch = jsonResponse.query.pages.[\"2485800\"].images;\n                          const returnedObj2 = propToSearch.find(obj => {\n                              return obj.title.includes(countryName);\n                          });\n                          if (!returnedObj2) {\n                            console.log('A flag wasn\\'t find');\n                            return 'https://upload.wikimedia.org/wikipedia/commons/b/bd/Gray_flag_waving.png';\n                          }\n                          let flagImg = APIRequests.getFlagUrl(returnedObj2.title);\n                          return flagImg;\n                      };\n                      \n                  })\n                \n              }\n              let flagImg = APIRequests.getFlagUrl(returnedObj.title); \n              \n              return flagImg;\n      \n            }\n          })\n    },\n    getFlagUrl(filename) {\n        return fetch(`https://en.wikipedia.org/w/api.php?action=query&format=json&prop=imageinfo&titles=${filename}&iiprop=url&origin=*`).then(response => {\n            return response.json();\n        }).then(jsonResponse => {\n            if(jsonResponse.query.pages[Object.keys(jsonResponse.query.pages)[0]].imageinfo) {\n                return jsonResponse.query.pages[Object.keys(jsonResponse.query.pages)[0]].imageinfo[0].url;\n            }\n        });\n        \n    },\n    getWeatherInfo(city) {\n        return fetch (`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${weatherApiKey}`).then(response => {\n            return response.json();\n        }).then(jsonResponse => {\n            if(jsonResponse.weather) {\n                \n                \n                return ({\n                    temperature: jsonResponse.main.temp,\n                    description: jsonResponse.weather[0].main,\n                    icon: jsonResponse.weather[0].icon,\n                    timezone: jsonResponse.timezone,\n                    sunrise: jsonResponse.sys.sunrise,\n                    sunset: jsonResponse.sys.sunset,\n                    lon: jsonResponse.coord.lon,\n                    lat: jsonResponse.coord.lat\n                })\n            } else {\n                console.log('The city not found.');\n                return;\n            }\n        })\n    },\n   \n    getPhotosFromFlickr(gallery) {\n        return fetch(`https://www.flickr.com/services/rest/?method=flickr.galleries.getPhotos&api_key=${flickrKey}&gallery_id=${gallery}&format=json&nojsoncallback=1`,{\n            method: 'GET'\n        }).then(response => {\n            return response.json();\n    }).then(jsonResponse => {\n        if(jsonResponse.photos.photo) {\n            \n            return jsonResponse.photos.photo.map(element => ({\n                fPhotoId: element.id,\n                fPhotoSecret: element.secret,\n                fPhotoServer: element.server,\n                fPhotoComment: element.comment.[\"_content\"]\n            }))\n        }\n    });\n                   \n    },\n    \n}\n","import React from 'react';\nimport './MainScreen.css';\n\nexport class MainScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    handleSearch() {\n        this.props.searchGeo();\n    }\n\n    render() {\n        return (\n            <div className=\"Container\" id=\"mainScreen\">\n                <button className=\"Start-Button\" onClick={this.handleSearch}>Where is better?</button>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport './LoadingScreen.css';\n\nexport class LoadingScreen extends React.Component {\n    render() {\n        return (\n            <div className=\"Container\" id=\"loadingScreen\">\n                <p>Searching for the best place on Earth...</p>\n                <div className=\"loader\"></div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { Country } from './components/Country/Country';\nimport { APIRequests } from './components/GeoNames/APIRequests';\nimport { MainScreen } from './components/MainScreen/MainScreen';\nimport { LoadingScreen } from './components/LoadingScreen/LoadingScreen';\n\n\nlet rejectedCityIndexes = [8, 65, 231, 105, 215];\n\nconst ListOfCountries = APIRequests.getListOfCountries();\nconst gallery1 = '72157718532451323';\nconst gallery2 = '72157718591676711';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { country: [],\n                   language: '',\n                   flag: '',\n                   landmarks: []};\n    this.langName = this.langName.bind(this);\n    this.searchGeo = this.searchGeo.bind(this);\n    this.backToHome = this.backToHome.bind(this); \n    this.flagImage = this.flagImage.bind(this); \n    this.weatherInfo = this.weatherInfo.bind(this); \n    this.localTime = this.localTime.bind(this); \n    this.formatTime = this.formatTime.bind(this);\n    \n  }\n\n\n  formatTime(localDate) {\n   const newStr = localDate.slice(0, 5);\n    document.getElementById('time').innerHTML = newStr;\n}\n\n  searchGeo() {\n    document.getElementById('mainScreen').style.display = 'none';\n    document.getElementById('loadingScreen').style.display = 'block';\n    let randomNum = Math.floor(Math.random() * 250);\n    \n    if (rejectedCityIndexes.includes(randomNum)) {\n      console.log('The country does not have a capital. Relaunching...');\n      randomNum = Math.floor(Math.random() * 250);\n    };\n\n    console.log('Searching for country with index '+ randomNum + '...');\n    \n    ListOfCountries\n      .then(jsonResponse => {\n        if (jsonResponse.geonames) {\n          console.log('List of countries has been recieved.');\n          const country = jsonResponse.geonames[randomNum];\n          console.log('Country: ' + country.countryName + '(' + country.countryCode + ')');\n          console.log('Capital: ' + country.capital);\n          console.log('Languages: ' + country.languages);\n          this.langName(country.languages);\n          this.flagImage(country.countryName);\n          \n          let capital;\n          if(country.countryName === 'Palestine') {\n            capital = 'Jerusalem';\n          } else {\n            capital = country.capital;\n          };\n          this.weatherInfo(capital);\n          return ({\n            name: country.countryName,\n            code: country.countryCode,\n            population: country.population,\n            square: country.areaInSqKm,\n            language: country.languages,\n            capital: capital,\n            continent: country.continentName\n          });\n        }\n      })\n      .then(country => {\n        this.setState({ country: country });\n\n      });\n      \n        APIRequests.getPhotosFromFlickr(gallery1).then(photos => {\n          let resultArr = [];\n          for(let i = 0; i < photos.length; i++) {\n            \n            if(photos[i].fPhotoComment === this.state.country.name) {\n              console.log('Photos have been recieved.');\n              document.getElementById('loadingScreen').style.display = 'none';\n              resultArr.push({\n                id: photos[i].fPhotoId,\n                title: photos[i].fPhotoComment,\n                url: 'https://live.staticflickr.com/' + photos[i].fPhotoServer + '/' + photos[i].fPhotoId + '_' + photos[i].fPhotoSecret + '_w.jpg'\n    \n              })\n            }\n          };\n          return resultArr;\n          \n           \n        }).then(result => {\n          if(result.length > 0) {\n            this.setState({photos: result});\n          } else {\n            APIRequests.getPhotosFromFlickr(gallery2).then(photos => {\n              let resultArr = [];\n              for(let i = 0; i < photos.length; i++) {\n                if(photos[i].fPhotoComment === this.state.country.name) {\n                  console.log('Photos have been recieved.');\n                  document.getElementById('loadingScreen').style.display = 'none';\n                  resultArr.push({\n                    id: photos[i].fPhotoId,\n                    title: photos[i].fPhotoComment,\n                    url: 'https://live.staticflickr.com/' + photos[i].fPhotoServer + '/' + photos[i].fPhotoId + '_' + photos[i].fPhotoSecret + '_w.jpg'\n        \n                  })\n                }\n            }\n            document.getElementById('loadingScreen').style.display = 'none';\n            return resultArr;\n            \n          }).then(result => {\n            if(result.length > 0) {\n              this.setState({photos: result});\n            } else {\n              console.log('Photos didn\\'t find');\n            }\n          })\n          }\n          \n\n        });\n        \n       \n}\n\n  langName(codes) {  \n    let codeArr = [];\n    if (typeof codes === 'string') {\n        let newStr = codes.split(\",\");\n        for (let i = 0; i < newStr.length; i++) {\n            codeArr.push(newStr[i].slice(0, 2));\n        }\n    } else {\n        codeArr.push(codes);\n    };\n    let langNames = [];\n    for (let i = 0; i < codeArr.length; i++) {\n        let langCode = codeArr[i].toUpperCase();\n        const lang = APIRequests.getLangName(codes);\n        lang.then(jsonResponse => {\n          if (jsonResponse.parse.wikitext.[\"*\"]) {\n              console.log('Parsing Wikipedia\\'s list of languages');\n              const searchTerm = '#' + langCode;\n              const indexOfFirst = jsonResponse.parse.wikitext.[\"*\"].indexOf(searchTerm);\n              if (indexOfFirst === -1) {\n                  console.log('One of the languages was not found');\n                  return;\n              }\n              const indexOfLangName = jsonResponse.parse.wikitext.[\"*\"].lastIndexOf('title', indexOfFirst) + 7;\n              const endOfName = jsonResponse.parse.wikitext.[\"*\"].indexOf('\"', indexOfLangName);\n              const langName = jsonResponse.parse.wikitext.[\"*\"].slice(indexOfLangName, endOfName);\n              langNames.push(langName);\n              \n          }}).then(() =>{ \n            console.log('Language has been found.')\n            this.setState({language: langNames});\n            \n          });\n        }\n          \n      return langNames;    \n}\n  \n\n  flagImage(countryName) {\n    const flag = APIRequests.getFlagFile(countryName);\n    flag.then(response => {\n      console.log('Image of flag has been found.')\n      this.setState({flag: response});\n      \n    })\n  }\n  backToHome() {\n    this.searchGeo();\n    \n  }\n  weatherInfo(city) {\n    APIRequests.getWeatherInfo(city).then(obj => {\n      console.log('Weather Info has been recieved.')\n      this.setState({\n      weather: obj.description,\n      temp: obj.temperature,\n      timezone: obj.timezone,\n      icon: obj.icon,\n      sunrise: obj.sunrise,\n      sunset: obj.sunset,\n      lon: obj.lon,\n      lat: obj.lat\n    })}).then(response => {\n\n      this.localTime(this.state.timezone);\n      this.formatTime(this.state.localTime);\n    },\n      err => console.log('The city was not found in the Weather database')\n    )\n\n  }\n  localTime(timezone) {\n        \n        const localTime = Date.now();\n        const localFormatedTime = new Date(localTime);\n        const offset = localFormatedTime.getTimezoneOffset() * 60000;\n        const UTC = localTime + offset;\n        const countryTime = UTC + timezone * 1000;\n\n        \n        if (countryTime >= (this.state.sunrise * 1000) && (countryTime < (this.state.sunset * 1000))) {\n          this.setState({ isDay: true });\n        } else {\n          this.setState({ isDay: false });\n        };\n        const countryTimeLong = new Date(countryTime);\n        const countryTimeShort = countryTimeLong.toTimeString();\n\n  \n        this.setState({localTime: countryTimeShort});\n  }\n  render() {\n    \n    return (\n    <div>\n      <MainScreen searchGeo={this.searchGeo} />\n      <LoadingScreen />\n      <Country  \n               country={this.state.country}  \n               time={this.state.localTime} \n               language={this.state.language}\n               backToHome={this.backToHome}\n               flag={this.state.flag}\n               weather={this.state.weather}\n               temp={this.state.temp}\n               weatherIcon={this.state.icon}\n               isDay={this.state.isDay}\n               photos={this.state.photos}\n                />\n      \n    </div>\n    )\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}